<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.workoss.study</groupId>
    <artifactId>parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<slf4j.version>1.7.30</slf4j.version>
		<log4j2.version>2.13.3</log4j2.version>

		<jackson-bom.version>2.11.2</jackson-bom.version>
		<netty.version>4.1.51.Final</netty.version>
		<asm.version>9.0-beta</asm.version>
		<reactor-bom.version>2020.0.0-M2</reactor-bom.version>
		<rsocket-bom.version>1.1.0-M1</rsocket-bom.version>

		<!--		<jakarta.validation-api.version>3.0.0-M1</jakarta.validation-api.version>-->
		<jakarta.validation-api.version>2.0.2</jakarta.validation-api.version>
		<hibernate-validator.version>6.1.5.Final</hibernate-validator.version>


		<aspectj.version>1.9.6</aspectj.version>


		<spring.version>5.2.8.RELEASE</spring.version>
		<spring-boot.version>2.3.3.RELEASE</spring-boot.version>
		<spring-cloud.version>2020.0.0-M3</spring-cloud.version>
		<spring-security.version>5.3.3.RELEASE</spring-security.version>
		<spring-boot-admin.version>2.3.0</spring-boot-admin.version>
		<spring-data-r2dbc.version>1.1.3.RELEASE</spring-data-r2dbc.version>

		<mybatis.version>3.5.5</mybatis.version>
		<mybatis-spring.version>2.0.5</mybatis-spring.version>
		<mybatis-spring-boot-starter.version>2.1.3</mybatis-spring-boot-starter.version>

		<HikariCP.version>3.4.5</HikariCP.version>

		<r2dbc-bom.version>Arabba-SR6</r2dbc-bom.version>

		<protobuf.version>3.12.4</protobuf.version>
		<protostuff.version>1.7.2</protostuff.version>
		<liquibase.version>4.0.0</liquibase.version>


		<fastsql.version>2.0.0_preview_973</fastsql.version>
		<jakarta.persistence-api.version>2.2.3</jakarta.persistence-api.version>

		<lombok.version>1.18.12</lombok.version>
		<mapstruct.version>1.4.0.Beta3</mapstruct.version>

		<junit-jupiter.version>5.6.2</junit-jupiter.version>
		<mockito-core.version>3.4.6</mockito-core.version>

		<byte-buddy.version>1.10.14</byte-buddy.version>
		<scalecube-cluster.version>2.6.0-RC7</scalecube-cluster.version>
		<cloudevents.version>2.0.0-milestone1</cloudevents.version>
		<picocli.version>4.5.0</picocli.version>
		<feign-bom.version>10.11</feign-bom.version>


		<maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
		<maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>
		<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<maven-release-plugin.version>3.0.0-M1</maven-release-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
		<maven-war-plugin.version>3.3.1</maven-war-plugin.version>
		<maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
		<maven-shade-plugin.version>3.2.3</maven-shade-plugin.version>
		<maven-invoker-plugin.version>3.2.1</maven-invoker-plugin.version>
		<maven-help-plugin.version>3.2.0</maven-help-plugin.version>
		<maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
		<maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
		<maven-site-plugin.version>3.9.1</maven-site-plugin.version>
		<spring-javaformat-maven-plugin.version>0.0.22</spring-javaformat-maven-plugin.version>
		<git-commit-id-plugin.version>4.0.0</git-commit-id-plugin.version>
		<versions-maven-plugin.version>2.7</versions-maven-plugin.version>
		<license-maven-plugin.version>4.0.rc1</license-maven-plugin.version>

	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-parent</artifactId>
				<version>${slf4j.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>${log4j2.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson</groupId>
				<artifactId>jackson-bom</artifactId>
				<version>${jackson-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-bom</artifactId>
				<version>${netty.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>io.projectreactor</groupId>
				<artifactId>reactor-bom</artifactId>
				<version>${reactor-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>io.rsocket</groupId>
				<artifactId>rsocket-bom</artifactId>
				<version>${rsocket-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>


			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-bom</artifactId>
				<version>${spring-security.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-bom</artifactId>
				<version>${feign-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>io.r2dbc</groupId>
				<artifactId>r2dbc-bom</artifactId>
				<version>${r2dbc-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-dependencies</artifactId>
				<version>${spring-boot-admin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>



			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-bom</artifactId>
				<version>${protobuf.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>io.protostuff</groupId>
				<artifactId>protostuff-bom</artifactId>
				<version>${protostuff.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-core</artifactId>
				<version>${liquibase.version}</version>
				<exclusions>
					<exclusion>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.ow2.asm</groupId>
				<artifactId>asm</artifactId>
				<version>${asm.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-spring-boot-starter.version}</version>
			</dependency>

			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${HikariCP.version}</version>
			</dependency>


			<dependency>
				<groupId>jakarta.validation</groupId>
				<artifactId>jakarta.validation-api</artifactId>
				<version>${jakarta.validation-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>


			<dependency>
				<groupId>com.alibaba.fastsql</groupId>
				<artifactId>fastsql</artifactId>
				<version>${fastsql.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.persistence</groupId>
				<artifactId>jakarta.persistence-api</artifactId>
				<version>${jakarta.persistence-api.version}</version>
			</dependency>


			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${junit-jupiter.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito-core.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito-core.version}</version>
				<scope>test</scope>
			</dependency>


			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>


			<dependency>
				<groupId>net.bytebuddy</groupId>
				<artifactId>byte-buddy</artifactId>
				<version>${byte-buddy.version}</version>
			</dependency>
			<dependency>
				<groupId>net.bytebuddy</groupId>
				<artifactId>byte-buddy-agent</artifactId>
				<version>${byte-buddy.version}</version>
			</dependency>

			<dependency>
				<groupId>io.scalecube</groupId>
				<artifactId>scalecube-cluster</artifactId>
				<version>${scalecube-cluster.version}</version>
			</dependency>
			<dependency>
				<groupId>io.scalecube</groupId>
				<artifactId>scalecube-cluster-testlib</artifactId>
				<version>${scalecube-cluster.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>io.cloudevents</groupId>
				<artifactId>cloudevents-api</artifactId>
				<version>${cloudevents.version}</version>
			</dependency>

			<dependency>
				<groupId>info.picocli</groupId>
				<artifactId>picocli</artifactId>
				<version>${picocli.version}</version>
			</dependency>


		</dependencies>
	</dependencyManagement>


	<repositories>
		<repository>
			<id>spring</id>
			<name>spring lib-milestone</name>
			<url>https://maven.aliyun.com/repository/spring</url>
		</repository>
		<repository>
			<id>alimaven</id>
			<name>aliyun maven</name>
			<url>https://maven.aliyun.com/repository/public</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>alimaven</id>
			<name>aliyun maven</name>
			<url>https://maven.aliyun.com/repository/public</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-plugin</id>
			<name>spring-plugin</name>
			<url>https://maven.aliyun.com/repository/spring-plugin</url>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>rdc-private-repo</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<repositories>
				<repository>
					<id>rdc-releases</id>
					<url>https://packages.aliyun.com/maven/repository/2018751-release-sb65PP/</url>
				</repository>
				<repository>
					<id>rdc-snapshots</id>
					<url>https://packages.aliyun.com/maven/repository/2018751-snapshot-UpWoHZ/</url>
				</repository>
			</repositories>
			<distributionManagement>
				<repository>
					<id>rdc-releases</id>
					<url>https://packages.aliyun.com/maven/repository/2018751-release-sb65PP/</url>
				</repository>
				<snapshotRepository>
					<id>rdc-snapshots</id>
					<url>https://packages.aliyun.com/maven/repository/2018751-snapshot-UpWoHZ/</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>
		<profile>
			<id>talkyun-repo</id>
			<distributionManagement>
				<snapshotRepository>
					<id>talkyun-snapshot</id>
					<name>TalkYun Nexus Snapshot</name>
					<url>http://nexus.yifengx.com/content/repositories/snapshots/</url>
					<uniqueVersion>true</uniqueVersion>
				</snapshotRepository>
				<repository>
					<id>talkyun-release</id>
					<name>TalkYun Nexus Release</name>
					<url>http://nexus.yifengx.com/content/repositories/releases/</url>
				</repository>
			</distributionManagement>
		</profile>
	</profiles>


	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<configuration>
						<recompressZippedFiles>false</recompressZippedFiles>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<parameters>true</parameters>
						<annotationProcessorPaths>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${mapstruct.version}</version>
							</path>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${lombok.version}</version>
							</path>
						</annotationProcessorPaths>
						<compilerArgs>
							<!--<compilerArg>-parameters</compilerArg>-->
							<!--							<arg>&#45;&#45;add-modules</arg>-->
							<!--							<arg>jdk.unsupported</arg>-->
							<compilerArg>-Amapstruct.suppressGeneratorTimestamp=false </compilerArg>
							<compilerArg>-Amapstruct.suppressGeneratorVersionInfoComment=false </compilerArg>
						</compilerArgs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-invoker-plugin</artifactId>
					<version>${maven-invoker-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${maven-help-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<includes>
							<include>**/*.*</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<useDefaultDelimiters>true</useDefaultDelimiters>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<!-- 绑定source插件到Maven的生命周期 -->
							<phase>compile</phase>
							<!--在生命周期后执行绑定的source插件的goals -->
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<skipTests>true</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
				</plugin>


				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
					<configuration>                 <!--如果想在没有web.xml文件的情况下构建WAR，请设置为false。-->
						<failOnMissingWebXml>false</failOnMissingWebXml>
						<!--<packagingExcludes>                     %regex[WEB-INF/lib/ffmpeg-*-android-*.jar]                 </packagingExcludes>-->
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
					<configuration>
						<generateBackupPoms>false</generateBackupPoms>
					</configuration>
				</plugin>

				<plugin>
					<groupId>io.spring.javaformat</groupId>
					<artifactId>spring-javaformat-maven-plugin</artifactId>
					<version>${spring-javaformat-maven-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<!--fork:如果没有该项配置,整个devtools不会起作用-->
						<fork>true</fork>
						<layers>
							<enabled>true</enabled>
						</layers>
					</configuration>
				</plugin>


				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
					<executions>
						<execution>
							<id>get-the-git-infos</id>
							<goals>
								<goal>revision</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
						<prefix>git</prefix>
						<verbose>false</verbose>
						<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
						<generateGitPropertiesFile>true</generateGitPropertiesFile>
						<generateGitPropertiesFilename>
							${project.build.outputDirectory}/git.properties
						</generateGitPropertiesFilename>
						<format>json</format>
						<gitDescribe>
							<skip>false</skip>
							<always>false</always>
							<dirty>-dirty</dirty>
						</gitDescribe>
						<skipPoms>false</skipPoms>
					</configuration>
				</plugin>

				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<licenseSets>
							<licenseSet>
								<header>com/mycila/maven/plugin/license/templates/MIT.txt</header>
								<excludes>
									<exclude>*.txt</exclude>
									<exclude>*.sh</exclude>
									<exclude>*.yml</exclude>
									<exclude>.editorconfig</exclude>
									<exclude>.gitignore</exclude>
									<exclude>**/README</exclude>
									<exclude>**/*.xml</exclude>
									<exclude>src/test/resources/**</exclude>
									<exclude>src/main/resources/**</exclude>
								</excludes>
							</licenseSet>
						</licenseSets>
						<properties>
							<owner>workoss</owner>
							<email>workoss@icloud.com</email>
							<!--suppress UnresolvedMavenProperty -->
							<project.inceptionYear>${license.git.copyrightYears}-${license.git.copyrightLastYear}
							</project.inceptionYear>
						</properties>
						<mapping>
							<java>SLASHSTAR_STYLE</java>
						</mapping>
					</configuration>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>remove</goal>
								<goal>format</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>com.mycila</groupId>
							<artifactId>license-maven-plugin-git</artifactId>
							<version>${license-maven-plugin.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>net.bytebuddy</groupId>
					<artifactId>byte-buddy-maven-plugin</artifactId>
					<version>${byte-buddy.version}</version>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>


</project>
